<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Menglong&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zml1.github.io/"/>
  <updated>2018-10-09T09:36:18.273Z</updated>
  <id>https://zml1.github.io/</id>
  
  <author>
    <name>Menglong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>三星手机刷Recovery</title>
    <link href="https://zml1.github.io/2018/10/09/%E4%B8%89%E6%98%9F%E6%89%8B%E6%9C%BA%E5%88%B7Recovery/"/>
    <id>https://zml1.github.io/2018/10/09/三星手机刷Recovery/</id>
    <published>2018-10-09T07:47:09.000Z</published>
    <updated>2018-10-09T09:36:18.273Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;因为三星手机自带的Recovery功能过于鸡肋，想要对手机进行刷机就必须刷入第三方Recovery，只有第三方Recovery才能为各种卡刷ROM提供便利条件&lt;br&gt;
    
    </summary>
    
      <category term="手机" scheme="https://zml1.github.io/categories/%E6%89%8B%E6%9C%BA/"/>
    
    
      <category term="Recovery" scheme="https://zml1.github.io/tags/Recovery/"/>
    
  </entry>
  
  <entry>
    <title>Spring自定义标签-xsd</title>
    <link href="https://zml1.github.io/2018/09/10/Spring%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE-xsd/"/>
    <id>https://zml1.github.io/2018/09/10/Spring自定义标签-xsd/</id>
    <published>2018-09-10T03:58:08.000Z</published>
    <updated>2018-09-11T01:20:08.866Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;从Spring2.0开始，Spring提供了XML Schema可扩展机制，用户可以自定义XML Schema文件，并自定义XML Bean解析器，并集成到Spring Ioc 容器中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在我们日常配置Spring的xml文件过程中，使用的标签都是spring定义好的，例如&lt;bean&gt;这种，我们也可以遵从spring对于XML Schema Definition(XSD)定义的文档，实现自定义XSD&lt;br&gt;
    
    </summary>
    
      <category term="Spring" scheme="https://zml1.github.io/categories/Spring/"/>
    
    
      <category term="Spring" scheme="https://zml1.github.io/tags/Spring/"/>
    
      <category term="xsd" scheme="https://zml1.github.io/tags/xsd/"/>
    
  </entry>
  
  <entry>
    <title>java.lang.IllegalArgumentException:Can not set XXX to com.sun.proxy.$Proxy28</title>
    <link href="https://zml1.github.io/2018/07/10/Can-not-set-XXX-to-com-sun-proxy-Proxy28/"/>
    <id>https://zml1.github.io/2018/07/10/Can-not-set-XXX-to-com-sun-proxy-Proxy28/</id>
    <published>2018-07-10T01:09:33.000Z</published>
    <updated>2018-09-10T06:08:53.591Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近Spring项目启动报错java.lang.IllegalArgumentException: Can not set XXX to com.sun.proxy.$Proxy28经过检查发现是使用 @Autowired 时，写在了接口的实现类上面，由于spring AOP动态代理是通过接口，如果不做配置的话一般情况使用的是Java原生的动态代理，所以注入地方都要通过接口进行注入，如果通过实现类进行注入就会报这个错&lt;br&gt;代码如下：&lt;br&gt;
    
    </summary>
    
      <category term="Spring" scheme="https://zml1.github.io/categories/Spring/"/>
    
    
      <category term="Spring" scheme="https://zml1.github.io/tags/Spring/"/>
    
      <category term="proxy" scheme="https://zml1.github.io/tags/proxy/"/>
    
      <category term="IllegalArgumentException" scheme="https://zml1.github.io/tags/IllegalArgumentException/"/>
    
  </entry>
  
  <entry>
    <title>Shadowsocks安卓客户端（下载+配置）</title>
    <link href="https://zml1.github.io/2018/07/09/Shadowsocks%E5%AE%89%E5%8D%93(Android)%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%88%E4%B8%8B%E8%BD%BD%E5%8F%8A%E9%85%8D%E7%BD%AE%EF%BC%89/"/>
    <id>https://zml1.github.io/2018/07/09/Shadowsocks安卓(Android)客户端（下载及配置）/</id>
    <published>2018-07-09T02:29:25.000Z</published>
    <updated>2018-07-09T03:23:24.509Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;软件准备&quot;&gt;&lt;a href=&quot;#软件准备&quot; class=&quot;headerlink&quot; title=&quot;软件准备&quot;&gt;&lt;/a&gt;软件准备&lt;/h2&gt;&lt;p&gt;首先，点击下方按钮下载安卓版的客户端 Shadowsocks 。&lt;/p&gt;
&lt;p&gt;如果您是用微信打开的话，先点击手机右上角的三个点，然后选择手机自带的浏览器打开，这样才能下载成功。&lt;/p&gt;
&lt;p&gt;官方提供了几个不同版本，根据你手机的cpu选择合适的apk安装包（如果你也不知道，那就选择结尾是universal的就好啦）&lt;br&gt;
    
    </summary>
    
      <category term="科学上网" scheme="https://zml1.github.io/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
      <category term="Shadowsocks" scheme="https://zml1.github.io/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>Https升级指南</title>
    <link href="https://zml1.github.io/2018/06/19/https%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97/"/>
    <id>https://zml1.github.io/2018/06/19/https升级指南/</id>
    <published>2018-06-19T02:01:50.000Z</published>
    <updated>2018-09-10T06:12:30.590Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;获取证书&quot;&gt;&lt;a href=&quot;#获取证书&quot; class=&quot;headerlink&quot; title=&quot;获取证书&quot;&gt;&lt;/a&gt;获取证书&lt;/h2&gt;&lt;p&gt;升级到https的第一步就是要先获取一张证书。&lt;br&gt;证书是一个二进制文件，里面包含经过认证的网站公钥和一些元数据，要从经销商购买。&lt;/p&gt;
&lt;h3 id=&quot;证书的概念&quot;&gt;&lt;a href=&quot;#证书的概念&quot; class=&quot;headerlink&quot; title=&quot;证书的概念&quot;&gt;&lt;/a&gt;证书的概念&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;证书的概念：首先要有一个根证书，然后用根证书来签发服务器证书和客户证书。服务器证书和客户证书是平级关系。SSL必须安装 服务器证书来认证。 因此，在此环境中，至少必须有三个证书：根证书，服务器证书，客户端证书。 在生成证书之前，一般会有一个私钥，同时用私钥生成证书请求，再利用证书服务器的根证来签发证书。 SSL所使用的证书可以自己生成，也可以通过一个商业性CA（如Verisign 或 Thawte）签署证书。&lt;/li&gt;
&lt;li&gt;签发证书的问题：如果使用的是商业证书，具体的签署方法请查看相关销售商的说明；如果是知己签发的证书，可以使用openssl自带的CA.sh 脚本工具。
    
    </summary>
    
      <category term="服务器" scheme="https://zml1.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="HTTPS" scheme="https://zml1.github.io/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>HBase1.2安装配置</title>
    <link href="https://zml1.github.io/2018/03/20/HBase1.2.6%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>https://zml1.github.io/2018/03/20/HBase1.2.6安装配置/</id>
    <published>2018-03-20T09:23:42.000Z</published>
    <updated>2018-09-10T06:06:31.814Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装模式&quot;&gt;&lt;a href=&quot;#安装模式&quot; class=&quot;headerlink&quot; title=&quot;安装模式&quot;&gt;&lt;/a&gt;安装模式&lt;/h2&gt;&lt;p&gt;Hbase分为三种安装模式：单机模式，伪分布式模式，完全分布式模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单机模式：单机模式的安装非常简单，几乎不用对安装文件做什么修改就可以使用。单机模式下，HBase并不使用HDFS，因此将安装文件解压后就几乎可以直接运行。&lt;/li&gt;
&lt;li&gt;伪分布模式是一个运行在单台机器上的分布式模式。此模式下，HBase所有的守护进程将运行在同一个节点之上，而且需要依赖HDFS，因此在此之前必须保证HDFS已经成功运行。
    
    </summary>
    
      <category term="大数据" scheme="https://zml1.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="HBase" scheme="https://zml1.github.io/tags/HBase/"/>
    
  </entry>
  
  <entry>
    <title>Centos7.4 安装MySQL 5.7.21 (通用二进制包)</title>
    <link href="https://zml1.github.io/2018/02/01/Centos7-4-%E5%AE%89%E8%A3%85MySQL-5-7-21-%E9%80%9A%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85/"/>
    <id>https://zml1.github.io/2018/02/01/Centos7-4-安装MySQL-5-7-21-通用二进制包/</id>
    <published>2018-02-01T07:41:00.000Z</published>
    <updated>2018-09-10T07:04:18.704Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载安装包&quot;&gt;&lt;a href=&quot;#下载安装包&quot; class=&quot;headerlink&quot; title=&quot;下载安装包&quot;&gt;&lt;/a&gt;下载安装包&lt;/h2&gt;&lt;p&gt;MySQL 官方下载地址：&lt;a href=&quot;https://dev.mysql.com/downloads/mysql/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://dev.mysql.com/downloads/mysql/&lt;/a&gt;&lt;br&gt;MySQL 5.7官方安装文档：&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文完全按照官方步骤配置安装&lt;br&gt;
    
    </summary>
    
      <category term="服务器" scheme="https://zml1.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="mysql" scheme="https://zml1.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>nginx服务器安装启动及配置文件详解</title>
    <link href="https://zml1.github.io/2018/01/30/Nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/"/>
    <id>https://zml1.github.io/2018/01/30/Nginx服务器安装启动及配置文件详解/</id>
    <published>2018-01-30T03:47:11.000Z</published>
    <updated>2018-09-10T06:10:16.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;选择稳定nginx版本&quot;&gt;&lt;a href=&quot;#选择稳定nginx版本&quot; class=&quot;headerlink&quot; title=&quot;选择稳定nginx版本&quot;&gt;&lt;/a&gt;选择稳定nginx版本&lt;/h2&gt;&lt;p&gt;centos的yum不提供nginx安装，通过配置官方yum源的方式获取到的也只是源码包。所以我们找到了Nginx官网看下官方提供的安装方式：Nginx源码包下载的官网地址（&lt;a href=&quot;http://nginx.org/en/download.html）&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://nginx.org/en/download.html）&lt;/a&gt;&lt;br&gt;从官网上提供三个类型的版本，分别是Mainline version、Stable version、Legacy versions&lt;br&gt;
    
    </summary>
    
      <category term="服务器" scheme="https://zml1.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="nginx" scheme="https://zml1.github.io/tags/nginx/"/>
    
  </entry>
  
</feed>
